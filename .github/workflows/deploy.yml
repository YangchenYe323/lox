name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 6.0.2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
      - name: Build WASM package
        working-directory: ./rlox_wasm
        run: wasm-pack build --scope=eikasia
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: 'pnpm'
          cache-dependency-path: site/pnpm-lock.yaml
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            site/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install dependencies
        working-directory: ./site
        run: pnpm install
      - name: Build with Next.js
        working-directory: ./site
        run: pnpm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./site/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
